File: bolt_sugared.test
Build ID: 2d89b4bc628a1a2ab1ce55f9125ef28dce630acd
Type: cpu
Time: 2025-10-03 18:05:28 -03
Duration: 108.66s, Total samples = 146.73s (135.04%)
Showing nodes accounting for 117.13s, 79.83% of 146.73s total
Dropped 578 nodes (cum <= 0.73s)
      flat  flat%   sum%        cum   cum%
    12.06s  8.22%  8.22%     12.06s  8.22%  runtime.memclrNoHeapPointers
    10.99s  7.49% 15.71%     10.99s  7.49%  runtime.futex
     6.98s  4.76% 20.47%      7.79s  5.31%  runtime.typePointers.next
     6.81s  4.64% 25.11%     20.03s 13.65%  runtime.scanobject
     5.01s  3.41% 28.52%      5.01s  3.41%  runtime.nextFreeFast (inline)
     4.18s  2.85% 31.37%     35.09s 23.91%  runtime.mallocgcSmallScanNoHeader
     4.03s  2.75% 34.12%      5.74s  3.91%  internal/runtime/maps.(*Iter).Next
     3.60s  2.45% 36.57%      3.83s  2.61%  runtime.(*mspan).writeHeapBitsSmall
     2.73s  1.86% 38.43%      4.36s  2.97%  runtime.findObject
     2.38s  1.62% 40.05%      2.38s  1.62%  aeshashbody
     2.24s  1.53% 41.58%      7.56s  5.15%  github.com/goccy/go-json/internal/encoder/vm.Run
     2.19s  1.49% 43.07%     51.16s 34.87%  runtime.mallocgc
     2.16s  1.47% 44.54%      2.21s  1.51%  net/textproto.validHeaderFieldByte (inline)
     1.88s  1.28% 45.83%      1.88s  1.28%  internal/chacha8rand.block
     1.83s  1.25% 47.07%      2.55s  1.74%  runtime.scanblock
     1.62s  1.10% 48.18%      1.62s  1.10%  runtime.tgkill
     1.58s  1.08% 49.25%      1.58s  1.08%  runtime.(*mspan).base (inline)
     1.33s  0.91% 50.16%     22.14s 15.09%  runtime.mapassign_faststr
     1.25s  0.85% 51.01%      7.92s  5.40%  runtime.sweepone
     1.22s  0.83% 51.84%      1.40s  0.95%  runtime.step
     1.21s  0.82% 52.67%      3.47s  2.36%  net/textproto.CanonicalMIMEHeaderKey
     1.19s  0.81% 53.48%      1.19s  0.81%  internal/runtime/maps.(*groupReference).key (inline)
     1.15s  0.78% 54.26%      1.23s  0.84%  runtime.spanOf (inline)
     1.14s  0.78% 55.04%      1.14s  0.78%  runtime.bool2int (inline)
     1.13s  0.77% 55.81%      1.13s  0.77%  runtime.madvise
     1.10s  0.75% 56.56%      2.02s  1.38%  runtime.(*spanSet).push
     1.06s  0.72% 57.28%      1.06s  0.72%  runtime.typePointers.nextFast (inline)
     1.03s   0.7% 57.98%      1.03s   0.7%  internal/runtime/atomic.(*Uint32).Add (inline)
     1.02s   0.7% 58.68%     86.37s 58.86%  bolt.(*App).ServeHTTP
        1s  0.68% 59.36%      1.02s   0.7%  sync/atomic.(*Int32).Add (inline)
     0.98s  0.67% 60.03%      0.98s  0.67%  runtime.(*fixalloc).alloc
     0.98s  0.67% 60.70%      0.98s  0.67%  runtime.releasem (inline)
     0.96s  0.65% 61.35%      1.03s   0.7%  runtime.traceAcquireEnabled
     0.95s  0.65% 62.00%      5.56s  3.79%  runtime.(*sweepLocked).sweep
     0.95s  0.65% 62.65%      0.95s  0.65%  runtime.memmove
     0.92s  0.63% 63.27%      0.92s  0.63%  runtime.acquirem (inline)
     0.91s  0.62% 63.89%      0.91s  0.62%  internal/runtime/syscall.Syscall6
     0.89s  0.61% 64.50%     19.91s 13.57%  runtime.newobject
     0.83s  0.57% 65.07%      0.84s  0.57%  runtime.(*mspan).init
     0.75s  0.51% 65.58%      3.52s  2.40%  internal/runtime/maps.(*Iter).Init
     0.73s   0.5% 66.07%     10.14s  6.91%  runtime.mallocgcSmallNoscan
     0.72s  0.49% 66.56%      3.13s  2.13%  runtime.rand
     0.70s  0.48% 67.04%      1.70s  1.16%  internal/runtime/maps.(*Map).putSlotSmallFastStr
     0.66s  0.45% 67.49%     23.45s 15.98%  net/http.Header.Clone (inline)
     0.65s  0.44% 67.93%      1.41s  0.96%  runtime.(*unwinder).resolveInternal
     0.57s  0.39% 68.32%      2.35s  1.60%  runtime.wbBufFlush1
     0.56s  0.38% 68.70%      1.61s  1.10%  internal/runtime/maps.(*Map).getWithoutKeySmallFastStr
     0.53s  0.36% 69.07%      2.21s  1.51%  runtime.pcvalue
     0.47s  0.32% 69.39%      1.57s  1.07%  bolt.(*ContextPool).Release
     0.47s  0.32% 69.71%      0.95s  0.65%  sync.(*Pool).Put
     0.44s   0.3% 70.01%      1.62s  1.10%  runtime.greyobject
     0.43s  0.29% 70.30%     21.91s 14.93%  bolt.(*Context).Bytes
     0.42s  0.29% 70.59%      1.52s  1.04%  runtime.(*spanSet).pop
     0.42s  0.29% 70.87%     13.36s  9.11%  runtime.makeslice
     0.40s  0.27% 71.14%      2.14s  1.46%  gcWriteBarrier
     0.40s  0.27% 71.42%      4.23s  2.88%  runtime.heapSetTypeNoHeader (inline)
     0.39s  0.27% 71.68%      1.21s  0.82%  runtime.lock2
     0.37s  0.25% 71.93%      4.32s  2.94%  runtime.(*mheap).allocSpan
     0.37s  0.25% 72.19%      2.06s  1.40%  runtime.(*mheap).initSpan
     0.37s  0.25% 72.44%         2s  1.36%  runtime.mapaccess1_faststr
     0.35s  0.24% 72.68%      3.31s  2.26%  bolt.(*Router).GetValue
     0.35s  0.24% 72.92%     23.93s 16.31%  net/http/httptest.(*ResponseRecorder).WriteHeader
     0.33s  0.22% 73.14%     12.25s  8.35%  runtime.(*mcache).refill
     0.31s  0.21% 73.35%      4.10s  2.79%  bytes.(*Buffer).Write
     0.31s  0.21% 73.56%      0.86s  0.59%  runtime.unlock2
     0.29s   0.2% 73.76%      3.50s  2.39%  bytes.(*Buffer).grow
     0.28s  0.19% 73.95%      3.43s  2.34%  internal/runtime/maps.rand
     0.26s  0.18% 74.13%      4.46s  3.04%  net/http/httptest.(*ResponseRecorder).Write
     0.24s  0.16% 74.29%     15.23s 10.38%  bolt.(*Context).String
     0.24s  0.16% 74.46%     22.20s 15.13%  bolt.DefaultErrorHandler
     0.22s  0.15% 74.61%      9.06s  6.17%  runtime.(*mcentral).cacheSpan
     0.22s  0.15% 74.76%      6.86s  4.68%  runtime.mapIterStart
     0.21s  0.14% 74.90%     43.30s 29.51%  runtime.systemstack
     0.20s  0.14% 75.04%     11.23s  7.65%  benchmarks/bolt_sugared.BenchmarkSugaredFileUpload.func1
     0.20s  0.14% 75.17%     12.76s  8.70%  runtime.(*mcache).nextFree
     0.20s  0.14% 75.31%      5.01s  3.41%  runtime.findRunnable
     0.20s  0.14% 75.44%      0.88s   0.6%  runtime.growslice
     0.19s  0.13% 75.57%      2.07s  1.41%  internal/chacha8rand.(*State).Refill
     0.18s  0.12% 75.70%      1.74s  1.19%  runtime.(*mheap).freeSpanLocked
     0.18s  0.12% 75.82%      3.61s  2.46%  runtime.deductAssistCredit
     0.16s  0.11% 75.93%      3.08s  2.10%  internal/runtime/maps.NewMap
     0.16s  0.11% 76.04%      0.90s  0.61%  runtime.(*mspan).typePointersOfUnchecked
     0.16s  0.11% 76.15%      1.30s  0.89%  runtime.makeSpanClass (inline)
     0.16s  0.11% 76.26%     16.83s 11.47%  runtime.newarray
     0.15s   0.1% 76.36%     17.36s 11.83%  internal/runtime/maps.(*Map).growToSmall
     0.15s   0.1% 76.46%      1.51s  1.03%  runtime.(*gcControllerState).update
     0.14s 0.095% 76.56%     15.47s 10.54%  bolt.(*Context).JSON
     0.14s 0.095% 76.65%      0.84s  0.57%  github.com/goccy/go-json/internal/encoder.AppendString
     0.14s 0.095% 76.75%     23.46s 15.99%  runtime.gcDrain
     0.13s 0.089% 76.84%     16.96s 11.56%  internal/runtime/maps.newarray
     0.13s 0.089% 76.92%      0.82s  0.56%  runtime.(*mspan).markBitsForIndex (inline)
     0.13s 0.089% 77.01%      1.86s  1.27%  runtime.mapIterNext
     0.12s 0.082% 77.09%      8.54s  5.82%  github.com/goccy/go-json.marshal
     0.12s 0.082% 77.18%      1.68s  1.14%  runtime.forEachPInternal
     0.12s 0.082% 77.26%      4.28s  2.92%  runtime.makemap_small
     0.11s 0.075% 77.33%      4.60s  3.14%  github.com/goccy/go-json/internal/decoder.NewStream (inline)
     0.11s 0.075% 77.41%     17.07s 11.63%  internal/runtime/maps.newGroups (inline)
     0.11s 0.075% 77.48%         1s  0.68%  reflect.New
     0.11s 0.075% 77.56%      1.25s  0.85%  runtime.gcmarknewobject
     0.11s 0.075% 77.63%      4.82s  3.28%  runtime.markroot
     0.10s 0.068% 77.70%      7.45s  5.08%  bolt.wrapTypedHandler.func1
     0.10s 0.068% 77.77%      0.96s  0.65%  runtime.(*gcControllerState).enlistWorker
     0.10s 0.068% 77.84%      0.85s  0.58%  runtime.(*pageAlloc).update
     0.10s 0.068% 77.90%      3.19s  2.17%  runtime.makemap
     0.10s 0.068% 77.97%      1.66s  1.13%  runtime.notesleep
     0.10s 0.068% 78.04%      0.76s  0.52%  sort.insertionSort
     0.09s 0.061% 78.10%     10.90s  7.43%  benchmarks/bolt_sugared.BenchmarkSugaredDynamicRoute
     0.09s 0.061% 78.16%      6.23s  4.25%  bolt.(*Context).BindJSON
     0.09s 0.061% 78.23%      1.26s  0.86%  net/textproto.MIMEHeader.Get
     0.09s 0.061% 78.29%     15.97s 10.88%  net/textproto.MIMEHeader.Set (inline)
     0.09s 0.061% 78.35%      0.91s  0.62%  runtime.newMarkBits
     0.08s 0.055% 78.40%      0.96s  0.65%  github.com/goccy/go-json.(*Decoder).DecodeWithOption
     0.08s 0.055% 78.46%      1.13s  0.77%  runtime.traceAcquire (inline)
     0.08s 0.055% 78.51%      0.99s  0.67%  runtime.traceWriter.event
     0.07s 0.048% 78.56%      9.49s  6.47%  benchmarks/bolt_sugared.BenchmarkSugaredStaticRoute.func1
     0.07s 0.048% 78.61%      1.52s  1.04%  runtime.(*mcentral).uncacheSpan
     0.07s 0.048% 78.65%      5.54s  3.78%  runtime.newstack
     0.06s 0.041% 78.70%     10.14s  6.91%  benchmarks/bolt_sugared.BenchmarkSugaredQueryParameters.func1
     0.06s 0.041% 78.74%      1.07s  0.73%  runtime.traceEventWriter.event
     0.05s 0.034% 78.77%      2.57s  1.75%  net/url.parseQuery
     0.05s 0.034% 78.80%      0.79s  0.54%  runtime.preemptall
     0.05s 0.034% 78.84%      1.77s  1.21%  runtime.scanstack
     0.05s 0.034% 78.87%      9.90s  6.75%  runtime.schedule
     0.05s 0.034% 78.91%      0.77s  0.52%  runtime.traceStack
     0.05s 0.034% 78.94%      0.87s  0.59%  sort.Sort
     0.04s 0.027% 78.97%     13.12s  8.94%  benchmarks/bolt_sugared.BenchmarkSugaredTypedJSON
     0.04s 0.027% 79.00%      2.36s  1.61%  runtime.futexsleep
     0.03s  0.02% 79.02%      9.62s  6.56%  benchmarks/bolt_sugared.BenchmarkSugaredLargeJSON
     0.03s  0.02% 79.04%     10.88s  7.41%  benchmarks/bolt_sugared.BenchmarkSugaredMiddleware
     0.03s  0.02% 79.06%      8.51s  5.80%  benchmarks/bolt_sugared.BenchmarkSugaredMiddleware.func1.1
     0.03s  0.02% 79.08%      0.99s  0.67%  github.com/goccy/go-json.(*Decoder).Decode (inline)
     0.03s  0.02% 79.10%      7.77s  5.30%  github.com/goccy/go-json.encode
     0.03s  0.02% 79.12%      8.25s  5.62%  net/http/httptest.NewRecorder (inline)
     0.03s  0.02% 79.14%      4.44s  3.03%  runtime.(*mheap).alloc
     0.03s  0.02% 79.16%      4.37s  2.98%  runtime.(*mheap).alloc.func1
     0.03s  0.02% 79.18%      1.25s  0.85%  runtime.(*mheap).nextSpanForSweep
     0.03s  0.02% 79.20%      0.81s  0.55%  runtime.(*pageAlloc).free
     0.03s  0.02% 79.22%      2.07s  1.41%  runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func2
     0.03s  0.02% 79.24%      1.51s  1.03%  runtime.dumpStacksRec
     0.03s  0.02% 79.26%     27.86s 18.99%  runtime.gcBgMarkWorker
     0.03s  0.02% 79.28%      3.13s  2.13%  runtime.gcDrainN
     0.03s  0.02% 79.30%      2.02s  1.38%  runtime.gcStart
     0.03s  0.02% 79.32%      0.84s  0.57%  runtime.stopTheWorldWithSema
     0.03s  0.02% 79.34%      1.22s  0.83%  runtime.tracebackPCs
     0.03s  0.02% 79.36%      0.90s  0.61%  runtime.unlock (partial-inline)
     0.02s 0.014% 79.38%      4.72s  3.22%  benchmarks/bolt_sugared.BenchmarkSugaredComplexRouting.func1
     0.02s 0.014% 79.39%     12.51s  8.53%  benchmarks/bolt_sugared.BenchmarkSugaredStaticRoute
     0.02s 0.014% 79.40%      7.58s  5.17%  github.com/goccy/go-json.encodeRunCode
     0.02s 0.014% 79.42%      4.15s  2.83%  internal/runtime/maps.NewEmptyMap (inline)
     0.02s 0.014% 79.43%      0.99s  0.67%  runtime.(*Frames).Next
     0.02s 0.014% 79.45%      2.26s  1.54%  runtime.(*mspan).initHeapBits
     0.02s 0.014% 79.46%      1.44s  0.98%  runtime.(*unwinder).next
     0.02s 0.014% 79.47%      1.41s  0.96%  runtime.callers
     0.02s 0.014% 79.49%      3.43s  2.34%  runtime.gcAssistAlloc
     0.02s 0.014% 79.50%      3.24s  2.21%  runtime.gcAssistAlloc1
     0.02s 0.014% 79.51%      4.96s  3.38%  runtime.goschedImpl
     0.02s 0.014% 79.53%      1.23s  0.84%  runtime.lock (inline)
     0.02s 0.014% 79.54%      1.22s  0.83%  runtime.mapiterinit
     0.02s 0.014% 79.55%      7.28s  4.96%  runtime.park_m
     0.02s 0.014% 79.57%      7.28s  4.96%  runtime.wakep
     0.02s 0.014% 79.58%      2.18s  1.49%  runtime.wbBufFlush
     0.02s 0.014% 79.60%      2.15s  1.47%  runtime.wbBufFlush.func1
     0.02s 0.014% 79.61%      0.78s  0.53%  sort.pdqsort
     0.01s 0.0068% 79.62%     11.08s  7.55%  benchmarks/bolt_sugared.BenchmarkSugaredComplexRouting
     0.01s 0.0068% 79.62%     11.93s  8.13%  benchmarks/bolt_sugared.BenchmarkSugaredFileUpload
     0.01s 0.0068% 79.63%      5.82s  3.97%  benchmarks/bolt_sugared.BenchmarkSugaredMiddleware.func2
     0.01s 0.0068% 79.64%     14.90s 10.15%  benchmarks/bolt_sugared.BenchmarkSugaredQueryParameters
     0.01s 0.0068% 79.64%      4.61s  3.14%  github.com/goccy/go-json.NewDecoder (inline)
     0.01s 0.0068% 79.65%      1.27s  0.87%  net/http.Header.Get (inline)
     0.01s 0.0068% 79.66%     15.98s 10.89%  net/http.Header.Set (inline)
     0.01s 0.0068% 79.66%      2.71s  1.85%  net/url.ParseQuery (inline)
     0.01s 0.0068% 79.67%      1.07s  0.73%  runtime.(*gcWork).balance
     0.01s 0.0068% 79.68%      6.71s  4.57%  runtime.(*mcentral).grow
     0.01s 0.0068% 79.68%      0.97s  0.66%  runtime.(*mheap).allocMSpanLocked
     0.01s 0.0068% 79.69%      1.19s  0.81%  runtime.(*pageAlloc).scavenge.func1
     0.01s 0.0068% 79.70%      1.18s   0.8%  runtime.(*pageAlloc).scavengeOne
     0.01s 0.0068% 79.70%      1.20s  0.82%  runtime.(*scavengerState).run
     0.01s 0.0068% 79.71%      1.23s  0.84%  runtime.bgscavenge
     0.01s 0.0068% 79.72%      7.98s  5.44%  runtime.bgsweep
     0.01s 0.0068% 79.72%      1.39s  0.95%  runtime.callers.func1
     0.01s 0.0068% 79.73%      0.76s  0.52%  runtime.funcspdelta (inline)
     0.01s 0.0068% 79.74%      3.25s  2.21%  runtime.gcAssistAlloc.func2
     0.01s 0.0068% 79.75%      4.20s  2.86%  runtime.gcMarkDone
     0.01s 0.0068% 79.75%      1.01s  0.69%  runtime.gcMarkDone.forEachP.func5
     0.01s 0.0068% 79.76%      2.15s  1.47%  runtime.gcMarkTermination
     0.01s 0.0068% 79.77%      1.06s  0.72%  runtime.gcStart.func4
     0.01s 0.0068% 79.77%      1.67s  1.14%  runtime.mProf_Malloc
     0.01s 0.0068% 79.78%      8.19s  5.58%  runtime.notewakeup
     0.01s 0.0068% 79.79%      1.59s  1.08%  runtime.preemptone
     0.01s 0.0068% 79.79%      1.70s  1.16%  runtime.profilealloc
     0.01s 0.0068% 79.80%      4.46s  3.04%  runtime.resetspinning
     0.01s 0.0068% 79.81%      7.05s  4.80%  runtime.startm
     0.01s 0.0068% 79.81%      2.08s  1.42%  runtime.stopm
     0.01s 0.0068% 79.82%      0.77s  0.52%  runtime.traceLocker.HeapAlloc
     0.01s 0.0068% 79.83%      0.87s  0.59%  runtime.unlockWithRank (inline)
         0     0% 79.83%      8.54s  5.82%  github.com/goccy/go-json.Marshal
         0     0% 79.83%      8.54s  5.82%  github.com/goccy/go-json.MarshalWithOption (inline)
         0     0% 79.83%      2.72s  1.85%  net/url.(*URL).Query
         0     0% 79.83%      2.07s  1.41%  runtime.(*mheap).freeSpan (inline)
         0     0% 79.83%      1.19s  0.81%  runtime.(*pageAlloc).scavenge
         0     0% 79.83%      1.19s  0.81%  runtime.(*scavengerState).init.func2
         0     0% 79.83%      1.52s  1.04%  runtime.(*traceAdvancerState).start.func1
         0     0% 79.83%      1.51s  1.03%  runtime.(*traceStackTable).dump
         0     0% 79.83%      1.72s  1.17%  runtime.forEachP (inline)
         0     0% 79.83%      8.67s  5.91%  runtime.futexwakeup
         0     0% 79.83%     23.49s 16.01%  runtime.gcBgMarkWorker.func2
         0     0% 79.83%     22.10s 15.06%  runtime.gcDrainMarkWorkerDedicated (inline)
         0     0% 79.83%      1.36s  0.93%  runtime.gcDrainMarkWorkerIdle (inline)
         0     0% 79.83%      0.76s  0.52%  runtime.gcMarkTermination.func3
         0     0% 79.83%      4.83s  3.29%  runtime.gopreempt_m (inline)
         0     0% 79.83%      1.21s  0.82%  runtime.lockWithRank (inline)
         0     0% 79.83%      1.66s  1.13%  runtime.mPark (inline)
         0     0% 79.83%      1.25s  0.85%  runtime.makeTraceFrames
         0     0% 79.83%      2.25s  1.53%  runtime.markroot.func1
         0     0% 79.83%      2.29s  1.56%  runtime.markrootBlock
         0     0% 79.83%      7.44s  5.07%  runtime.mcall
         0     0% 79.83%      4.60s  3.14%  runtime.morestack
         0     0% 79.83%      1.82s  1.24%  runtime.preemptM (inline)
         0     0% 79.83%      1.27s  0.87%  runtime.runSafePointFn
         0     0% 79.83%      1.81s  1.23%  runtime.signalM
         0     0% 79.83%      1.83s  1.25%  runtime.startTheWorldWithSema
         0     0% 79.83%      1.13s  0.77%  runtime.sysUnused (inline)
         0     0% 79.83%      1.13s  0.77%  runtime.sysUnusedOS
         0     0% 79.83%      1.52s  1.04%  runtime.traceAdvance
         0     0% 79.83%      0.76s  0.52%  runtime.traceLocker.stack (inline)
         0     0% 79.83%     94.99s 64.74%  testing.(*B).launch
         0     0% 79.83%     95.08s 64.80%  testing.(*B).runN
