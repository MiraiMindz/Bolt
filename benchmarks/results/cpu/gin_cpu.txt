File: gin.test
Build ID: ea5d1f591631c56fc8179f52f76ddfdbdf4fa5c3
Type: cpu
Time: 2025-10-03 11:58:50 -03
Duration: 63.18s, Total samples = 85.93s (136.00%)
Showing nodes accounting for 67.76s, 78.85% of 85.93s total
Dropped 485 nodes (cum <= 0.43s)
      flat  flat%   sum%        cum   cum%
     5.42s  6.31%  6.31%      5.42s  6.31%  runtime.futex
     4.67s  5.43% 11.74%      4.67s  5.43%  runtime.memclrNoHeapPointers
     4.48s  5.21% 16.96%     10.35s 12.04%  runtime.scanobject
     3.62s  4.21% 21.17%      3.62s  4.21%  runtime.nextFreeFast (inline)
     2.78s  3.24% 24.40%      4.02s  4.68%  internal/runtime/maps.(*Iter).Next
     2.34s  2.72% 27.13%      2.47s  2.87%  runtime.(*mspan).writeHeapBitsSmall
     2.34s  2.72% 29.85%     22.28s 25.93%  runtime.mallocgcSmallScanNoHeader
     2.13s  2.48% 32.33%      2.33s  2.71%  runtime.typePointers.next
     1.49s  1.73% 34.06%      2.44s  2.84%  runtime.findObject
     1.47s  1.71% 35.77%     29.85s 34.74%  runtime.mallocgc
     1.30s  1.51% 37.29%     50.27s 58.50%  github.com/gin-gonic/gin.(*Engine).handleHTTPRequest
     1.25s  1.45% 38.74%      1.97s  2.29%  runtime.scanblock
     1.20s  1.40% 40.14%      1.20s  1.40%  internal/chacha8rand.block
        1s  1.16% 41.30%         1s  1.16%  runtime.bool2int (inline)
     0.96s  1.12% 42.42%      0.96s  1.12%  runtime.tgkill
     0.87s  1.01% 43.43%     14.67s 17.07%  runtime.mapassign_faststr
     0.85s  0.99% 44.42%      0.85s  0.99%  aeshashbody
     0.84s  0.98% 45.40%      0.84s  0.98%  runtime.(*mspan).base (inline)
     0.80s  0.93% 46.33%      0.80s  0.93%  runtime.acquirem (inline)
     0.80s  0.93% 47.26%      0.80s  0.93%  runtime.memmove
     0.78s  0.91% 48.17%      1.35s  1.57%  sync.(*Pool).Put
     0.73s  0.85% 49.02%      0.73s  0.85%  internal/runtime/maps.(*groupReference).key (inline)
     0.72s  0.84% 49.85%      0.78s  0.91%  runtime.spanOf (inline)
     0.69s   0.8% 50.66%      0.69s   0.8%  runtime.releasem (inline)
     0.68s  0.79% 51.45%      4.86s  5.66%  runtime.sweepone
     0.67s  0.78% 52.23%      0.67s  0.78%  internal/runtime/atomic.(*Uint32).Add (inline)
     0.67s  0.78% 53.01%     15.86s 18.46%  net/http.Header.Clone (inline)
     0.66s  0.77% 53.78%      0.66s  0.77%  runtime.(*fixalloc).alloc
     0.62s  0.72% 54.50%      3.29s  3.83%  runtime.(*sweepLocked).sweep
     0.62s  0.72% 55.22%      0.62s  0.72%  runtime.typePointers.nextFast (inline)
     0.61s  0.71% 55.93%      0.62s  0.72%  runtime.traceAcquireEnabled
     0.57s  0.66% 56.59%      0.57s  0.66%  runtime.(*mspan).init
     0.52s  0.61% 57.20%      0.94s  1.09%  runtime.(*spanSet).push
     0.49s  0.57% 57.77%      1.51s  1.76%  internal/runtime/maps.(*Map).putSlotSmallFastStr
     0.47s  0.55% 58.31%     32.83s 38.21%  github.com/gin-gonic/gin.(*Context).Render
     0.47s  0.55% 58.86%      0.51s  0.59%  runtime.step
     0.46s  0.54% 59.40%         2s  2.33%  internal/runtime/maps.(*Iter).Init
     0.45s  0.52% 59.92%      0.45s  0.52%  internal/runtime/maps.h2 (inline)
     0.45s  0.52% 60.44%      0.45s  0.52%  internal/runtime/syscall.Syscall6
     0.45s  0.52% 60.97%      1.99s  2.32%  runtime.rand
     0.43s   0.5% 61.47%      1.18s  1.37%  runtime.wbBufFlush1
     0.42s  0.49% 61.96%      3.35s  3.90%  runtime.mallocgcSmallNoscan
     0.41s  0.48% 62.43%      0.50s  0.58%  runtime.(*gcBits).bitp (inline)
     0.41s  0.48% 62.91%     10.29s 11.97%  runtime.newobject
     0.39s  0.45% 63.37%     52.83s 61.48%  github.com/gin-gonic/gin.(*Engine).ServeHTTP
     0.38s  0.44% 63.81%     48.22s 56.12%  github.com/gin-gonic/gin.(*Context).Next
     0.34s   0.4% 64.20%      7.02s  8.17%  github.com/gin-gonic/gin/render.writeContentType
     0.32s  0.37% 64.58%      0.49s  0.57%  github.com/gin-gonic/gin.(*Context).reset (inline)
     0.32s  0.37% 64.95%      0.49s  0.57%  github.com/gin-gonic/gin.(*node).getValue
     0.31s  0.36% 65.31%      0.65s  0.76%  runtime.(*unwinder).resolveInternal
     0.30s  0.35% 65.66%      1.36s  1.58%  runtime.greyobject
     0.30s  0.35% 66.01%      0.76s  0.88%  sync.(*Pool).pin
     0.29s  0.34% 66.34%      0.74s  0.86%  runtime.lock2
     0.29s  0.34% 66.68%      0.88s  1.02%  runtime.pcvalue
     0.29s  0.34% 67.02%      0.68s  0.79%  sync.(*Pool).Get
     0.28s  0.33% 67.35%      1.22s  1.42%  gcWriteBarrier
     0.28s  0.33% 67.67%      5.60s  6.52%  runtime.makeslice
     0.26s   0.3% 67.97%      1.25s  1.45%  runtime.(*mheap).initSpan
     0.24s  0.28% 68.25%      0.53s  0.62%  errors.as
     0.24s  0.28% 68.53%     18.73s 21.80%  github.com/gin-gonic/gin.(*responseWriter).Write
     0.22s  0.26% 68.79%      2.21s  2.57%  internal/runtime/maps.rand
     0.22s  0.26% 69.04%      0.48s  0.56%  internal/sync.(*HashTrieMap[go.shape.interface {},go.shape.interface {}]).Load
     0.22s  0.26% 69.30%      0.54s  0.63%  net/textproto.CanonicalMIMEHeaderKey
     0.21s  0.24% 69.54%      6.57s  7.65%  runtime.(*mcache).refill
     0.21s  0.24% 69.79%      0.69s   0.8%  runtime.(*spanSet).pop
     0.20s  0.23% 70.02%      2.85s  3.32%  bytes.(*Buffer).Write
     0.20s  0.23% 70.25%      5.55s  6.46%  encoding/json.Marshal
     0.19s  0.22% 70.48%      1.39s  1.62%  encoding/json.(*Decoder).refill
     0.19s  0.22% 70.70%     12.28s 14.29%  runtime.gcDrain
     0.19s  0.22% 70.92%      2.66s  3.10%  runtime.heapSetTypeNoHeader (inline)
     0.18s  0.21% 71.13%      2.25s  2.62%  encoding/json.mapEncoder.encode
     0.17s   0.2% 71.33%     17.75s 20.66%  benchmarks/gin.BenchmarkMiddleware
     0.17s   0.2% 71.52%      6.91s  8.04%  runtime.(*mcache).nextFree
     0.16s  0.19% 71.71%     12.22s 14.22%  github.com/gin-gonic/gin/render.WriteJSON
     0.16s  0.19% 71.90%      1.39s  1.62%  runtime.mapIterNext
     0.15s  0.17% 72.07%     19.39s 22.56%  github.com/gin-gonic/gin/render.WriteString
     0.15s  0.17% 72.24%      0.72s  0.84%  internal/reflectlite.implements
     0.15s  0.17% 72.42%      1.25s  1.45%  runtime.(*mheap).freeSpanLocked
     0.15s  0.17% 72.59%      0.49s  0.57%  runtime.(*mspan).typePointersOfUnchecked
     0.15s  0.17% 72.77%      4.33s  5.04%  runtime.mapIterStart
     0.14s  0.16% 72.93%     16.10s 18.74%  net/http/httptest.(*ResponseRecorder).WriteHeader
     0.14s  0.16% 73.09%      2.47s  2.87%  runtime.(*mheap).allocSpan
     0.13s  0.15% 73.25%     12.27s 14.28%  benchmarks/gin.BenchmarkDynamicRoute
     0.13s  0.15% 73.40%     11.41s 13.28%  internal/runtime/maps.(*Map).growToSmall
     0.13s  0.15% 73.55%      2.47s  2.87%  internal/runtime/maps.NewMap
     0.12s  0.14% 73.69%      1.65s  1.92%  encoding/json.(*Decoder).readValue
     0.12s  0.14% 73.83%      1.54s  1.79%  errors.As
     0.12s  0.14% 73.97%      2.97s  3.46%  net/http/httptest.(*ResponseRecorder).Write
     0.12s  0.14% 74.11%      0.47s  0.55%  runtime.(*pageAlloc).update
     0.12s  0.14% 74.25%     11.11s 12.93%  runtime.newarray
     0.11s  0.13% 74.37%      0.50s  0.58%  runtime.typedmemmove
     0.10s  0.12% 74.49%      2.41s  2.80%  bytes.(*Buffer).grow
     0.10s  0.12% 74.61%      0.77s   0.9%  encoding/json.structEncoder.encode
     0.10s  0.12% 74.72%      1.30s  1.51%  internal/chacha8rand.(*State).Refill
     0.10s  0.12% 74.84%      2.66s  3.10%  runtime.makemap_small
     0.10s  0.12% 74.96%     23.47s 27.31%  runtime.systemstack
     0.09s   0.1% 75.06%     13.20s 15.36%  benchmarks/gin.BenchmarkTypedJSON
     0.09s   0.1% 75.17%      3.67s  4.27%  encoding/json.(*encodeState).reflectValue
     0.09s   0.1% 75.27%      0.44s  0.51%  encoding/json.newEncodeState
     0.09s   0.1% 75.38%      4.49s  5.23%  github.com/gin-gonic/gin.(*Context).Header
     0.09s   0.1% 75.48%      0.81s  0.94%  internal/reflectlite.rtype.Implements
     0.09s   0.1% 75.58%      2.91s  3.39%  runtime.convT
     0.09s   0.1% 75.69%      2.82s  3.28%  runtime.findRunnable
     0.08s 0.093% 75.78%      3.82s  4.45%  encoding/json.(*encodeState).marshal
     0.08s 0.093% 75.88%      0.48s  0.56%  encoding/json.stringEncoder
     0.08s 0.093% 75.97%      2.47s  2.87%  runtime.deductAssistCredit
     0.08s 0.093% 76.06%      0.68s  0.79%  runtime.gcmarknewobject
     0.07s 0.081% 76.14%     10.18s 11.85%  benchmarks/gin.BenchmarkDynamicRoute.func1
     0.07s 0.081% 76.22%      2.59s  3.01%  github.com/gin-gonic/gin/binding.decodeJSON
     0.07s 0.081% 76.31%     11.18s 13.01%  internal/runtime/maps.newarray
     0.07s 0.081% 76.39%      1.05s  1.22%  runtime.(*gcControllerState).update
     0.07s 0.081% 76.47%      4.54s  5.28%  runtime.(*mcentral).cacheSpan
     0.06s  0.07% 76.54%     15.90s 18.50%  benchmarks/gin.BenchmarkStaticRoute
     0.06s  0.07% 76.61%     11.24s 13.08%  internal/runtime/maps.newGroups (inline)
     0.06s  0.07% 76.68%      5.83s  6.78%  net/http/httptest.NewRecorder (inline)
     0.06s  0.07% 76.75%      1.49s  1.73%  runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func2
     0.06s  0.07% 76.82%      0.79s  0.92%  runtime.growslice
     0.06s  0.07% 76.89%      2.53s  2.94%  runtime.makemap
     0.06s  0.07% 76.96%      0.61s  0.71%  runtime.traceEventWriter.event
     0.05s 0.058% 77.02%     16.25s 18.91%  github.com/gin-gonic/gin.(*responseWriter).WriteHeaderNow (partial-inline)
     0.05s 0.058% 77.07%      2.64s  3.07%  github.com/gin-gonic/gin/binding.jsonBinding.Bind
     0.05s 0.058% 77.13%     19.44s 22.62%  github.com/gin-gonic/gin/render.String.Render
     0.05s 0.058% 77.19%      0.76s  0.88%  runtime.(*mheap).nextSpanForSweep
     0.05s 0.058% 77.25%      1.16s  1.35%  runtime.futexsleep
     0.05s 0.058% 77.31%      2.97s  3.46%  runtime.markroot
     0.05s 0.058% 77.37%      0.44s  0.51%  runtime.newMarkBits
     0.05s 0.058% 77.42%      0.92s  1.07%  runtime.notesleep
     0.05s 0.058% 77.48%      0.55s  0.64%  runtime.traceWriter.event
     0.04s 0.047% 77.53%      1.32s  1.54%  github.com/gin-gonic/gin.(*Context).Error
     0.04s 0.047% 77.57%      5.84s  6.80%  github.com/gin-gonic/gin.(*Context).MustBindWith
     0.04s 0.047% 77.62%      2.68s  3.12%  github.com/gin-gonic/gin.(*Context).ShouldBindWith (inline)
     0.04s 0.047% 77.67%      0.63s  0.73%  github.com/gin-gonic/gin.(*Context).Status (inline)
     0.04s 0.047% 77.71%      0.59s  0.69%  github.com/gin-gonic/gin.(*responseWriter).WriteHeader
     0.04s 0.047% 77.76%      2.52s  2.93%  runtime.(*mheap).alloc
     0.04s 0.047% 77.81%      0.74s  0.86%  runtime.(*unwinder).next
     0.04s 0.047% 77.85%      0.52s  0.61%  sync.(*Map).Load (inline)
     0.03s 0.035% 77.89%      1.74s  2.02%  encoding/json.(*Decoder).Decode
     0.03s 0.035% 77.92%      0.55s  0.64%  encoding/json.typeEncoder
     0.03s 0.035% 77.96%     13.82s 16.08%  github.com/gin-gonic/gin.(*Context).JSON (inline)
     0.03s 0.035% 77.99%      3.30s  3.84%  runtime.(*mcentral).grow
     0.03s 0.035% 78.03%      0.53s  0.62%  runtime.(*mspan).markBitsForIndex (inline)
     0.03s 0.035% 78.06%      0.75s  0.87%  runtime.forEachPInternal
     0.03s 0.035% 78.10%      0.92s  1.07%  runtime.mProf_Malloc
     0.03s 0.035% 78.13%      1.03s  1.20%  runtime.makeSpanClass (inline)
     0.02s 0.023% 78.16%     12.26s 14.27%  benchmarks/gin.BenchmarkStaticRoute.func1
     0.02s 0.023% 78.18%      2.03s  2.36%  github.com/gin-gonic/gin.(*Context).AbortWithError
     0.02s 0.023% 78.20%      5.86s  6.82%  github.com/gin-gonic/gin.(*Context).BindJSON (inline)
     0.02s 0.023% 78.23%     21.64s 25.18%  github.com/gin-gonic/gin.(*Context).String (inline)
     0.02s 0.023% 78.25%      4.30s  5.00%  net/textproto.MIMEHeader.Set (inline)
     0.02s 0.023% 78.27%      0.68s  0.79%  reflect.(*MapIter).Next
     0.02s 0.023% 78.30%      0.54s  0.63%  reflect.mapIterStart
     0.02s 0.023% 78.32%      0.67s  0.78%  runtime.(*mcentral).uncacheSpan
     0.02s 0.023% 78.34%      4.91s  5.71%  runtime.bgsweep
     0.02s 0.023% 78.37%      2.39s  2.78%  runtime.gcAssistAlloc
     0.02s 0.023% 78.39%     12.31s 14.33%  runtime.gcBgMarkWorker.func2
     0.02s 0.023% 78.41%      2.25s  2.62%  runtime.gcDrainN
     0.02s 0.023% 78.44%      0.75s  0.87%  runtime.lock (partial-inline)
     0.02s 0.023% 78.46%      0.94s  1.09%  runtime.mPark (inline)
     0.02s 0.023% 78.48%      2.32s  2.70%  runtime.newstack
     0.02s 0.023% 78.51%      0.48s  0.56%  runtime.traceLocker.HeapAlloc
     0.02s 0.023% 78.53%      0.45s  0.52%  runtime.traceRelease (inline)
     0.02s 0.023% 78.55%      0.44s  0.51%  runtime.traceStack
     0.02s 0.023% 78.58%      0.76s  0.88%  runtime.tracebackPCs
     0.02s 0.023% 78.60%      1.08s  1.26%  runtime.wbBufFlush.func1
     0.01s 0.012% 78.61%     13.99s 16.28%  benchmarks/gin.BenchmarkMiddleware.func1
     0.01s 0.012% 78.62%      0.69s   0.8%  github.com/gin-gonic/gin.(*Context).AbortWithStatus
     0.01s 0.012% 78.63%      2.56s  2.98%  internal/runtime/maps.NewEmptyMap (inline)
     0.01s 0.012% 78.65%      0.51s  0.59%  reflect.copyVal
     0.01s 0.012% 78.66%      0.68s  0.79%  runtime.(*gcWork).balance
     0.01s 0.012% 78.67%      2.48s  2.89%  runtime.(*mheap).alloc.func1
     0.01s 0.012% 78.68%      1.51s  1.76%  runtime.(*mheap).freeSpan (inline)
     0.01s 0.012% 78.69%      0.84s  0.98%  runtime.callers
     0.01s 0.012% 78.70%      0.82s  0.95%  runtime.callers.func1
     0.01s 0.012% 78.72%      0.48s  0.56%  runtime.dumpStacksRec
     0.01s 0.012% 78.73%      4.32s  5.03%  runtime.futexwakeup
     0.01s 0.012% 78.74%     14.28s 16.62%  runtime.gcBgMarkWorker
     0.01s 0.012% 78.75%      2.22s  2.58%  runtime.goschedImpl
     0.01s 0.012% 78.76%      0.89s  1.04%  runtime.markroot.func1
     0.01s 0.012% 78.77%      4.21s  4.90%  runtime.mcall
     0.01s 0.012% 78.79%      1.99s  2.32%  runtime.morestack
     0.01s 0.012% 78.80%      0.78s  0.91%  runtime.runSafePointFn
     0.01s 0.012% 78.81%      0.68s  0.79%  runtime.scanstack
     0.01s 0.012% 78.82%      5.22s  6.07%  runtime.schedule
     0.01s 0.012% 78.83%      3.45s  4.01%  runtime.startm
     0.01s 0.012% 78.84%      1.17s  1.36%  runtime.stopm
     0.01s 0.012% 78.85%      3.55s  4.13%  runtime.wakep
         0     0% 78.85%      9.40s 10.94%  benchmarks/gin.BenchmarkMiddleware.func2
         0     0% 78.85%     11.49s 13.37%  benchmarks/gin.BenchmarkTypedJSON.func1
         0     0% 78.85%      0.78s  0.91%  encoding/json.NewDecoder (inline)
         0     0% 78.85%      0.56s  0.65%  encoding/json.valueEncoder
         0     0% 78.85%      5.55s  6.46%  github.com/gin-gonic/gin/codec/json.jsonApi.Marshal
         0     0% 78.85%      0.78s  0.91%  github.com/gin-gonic/gin/codec/json.jsonApi.NewDecoder
         0     0% 78.85%     12.22s 14.22%  github.com/gin-gonic/gin/render.JSON.Render
         0     0% 78.85%      4.30s  5.00%  net/http.Header.Set (inline)
         0     0% 78.85%      0.68s  0.79%  runtime.(*gcControllerState).enlistWorker
         0     0% 78.85%      0.66s  0.77%  runtime.(*mheap).allocMSpanLocked
         0     0% 78.85%      0.75s  0.87%  runtime.(*mspan).initHeapBits
         0     0% 78.85%      0.58s  0.67%  runtime.(*pageAlloc).free
         0     0% 78.85%      0.48s  0.56%  runtime.(*traceAdvancerState).start.func1
         0     0% 78.85%      0.48s  0.56%  runtime.(*traceStackTable).dump
         0     0% 78.85%      0.76s  0.88%  runtime.forEachP (inline)
         0     0% 78.85%      2.29s  2.66%  runtime.gcAssistAlloc.func2
         0     0% 78.85%      2.29s  2.66%  runtime.gcAssistAlloc1
         0     0% 78.85%     11.29s 13.14%  runtime.gcDrainMarkWorkerDedicated (inline)
         0     0% 78.85%      0.99s  1.15%  runtime.gcDrainMarkWorkerIdle (inline)
         0     0% 78.85%      1.86s  2.16%  runtime.gcMarkDone
         0     0% 78.85%      0.49s  0.57%  runtime.gcMarkDone.forEachP.func5
         0     0% 78.85%      0.95s  1.11%  runtime.gcMarkTermination
         0     0% 78.85%      1.42s  1.65%  runtime.gcStart
         0     0% 78.85%      0.69s   0.8%  runtime.gcStart.func4
         0     0% 78.85%      2.13s  2.48%  runtime.gopreempt_m (inline)
         0     0% 78.85%      0.74s  0.86%  runtime.lockWithRank (inline)
         0     0% 78.85%      0.44s  0.51%  runtime.makeTraceFrames
         0     0% 78.85%      1.87s  2.18%  runtime.markrootBlock
         0     0% 78.85%      4.14s  4.82%  runtime.notewakeup
         0     0% 78.85%      4.08s  4.75%  runtime.park_m
         0     0% 78.85%      1.09s  1.27%  runtime.preemptM (inline)
         0     0% 78.85%      1.01s  1.18%  runtime.preemptone
         0     0% 78.85%      0.94s  1.09%  runtime.profilealloc
         0     0% 78.85%      2.23s  2.60%  runtime.resetspinning
         0     0% 78.85%      1.08s  1.26%  runtime.signalM
         0     0% 78.85%      1.07s  1.25%  runtime.startTheWorldWithSema
         0     0% 78.85%      0.62s  0.72%  runtime.traceAcquire (inline)
         0     0% 78.85%      0.48s  0.56%  runtime.traceAdvance
         0     0% 78.85%      0.44s  0.51%  runtime.traceLocker.stack (inline)
         0     0% 78.85%      1.09s  1.27%  runtime.wbBufFlush
         0     0% 78.85%     59.21s 68.90%  testing.(*B).launch
         0     0% 78.85%     59.22s 68.92%  testing.(*B).runN
