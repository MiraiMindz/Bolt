File: echo.test
Build ID: 5c55fcc1b7b62683b68df8db11ac725d2c35fcea
Type: alloc_space
Time: 2025-10-03 12:00:49 -03
Showing nodes accounting for 39.02GB, 99.19% of 39.34GB total
Dropped 78 nodes (cum <= 0.20GB)
      flat  flat%   sum%        cum   cum%
   13.18GB 33.50% 33.50%    13.18GB 33.50%  net/http.Header.Clone (inline)
   11.77GB 29.93% 63.43%    11.77GB 29.93%  net/textproto.MIMEHeader.Set (inline)
    5.06GB 12.86% 76.29%     5.06GB 12.86%  net/http/httptest.NewRecorder (inline)
    2.16GB  5.48% 81.77%     2.16GB  5.48%  encoding/json.(*Decoder).refill
    2.01GB  5.10% 86.87%     2.01GB  5.10%  bytes.(*Buffer).grow
    1.87GB  4.75% 91.62%     7.26GB 18.47%  benchmarks/echo.BenchmarkDynamicRoute.func1
    1.32GB  3.35% 94.97%     1.32GB  3.35%  encoding/json.NewDecoder (inline)
    0.47GB  1.21% 96.17%     0.47GB  1.21%  net/url.ParseQuery (inline)
    0.34GB  0.88% 97.05%    16.73GB 42.54%  github.com/labstack/echo/v4.(*context).String
    0.27GB  0.68% 97.73%     0.43GB  1.10%  encoding/json.mapEncoder.encode
    0.26GB  0.66% 98.39%     0.26GB  0.66%  github.com/labstack/echo/v4.NewHTTPError
    0.25GB  0.63% 99.02%     7.84GB 19.93%  benchmarks/echo.BenchmarkTypedJSON.func1
    0.07GB  0.17% 99.19%     3.80GB  9.66%  github.com/labstack/echo/v4.(*DefaultBinder).BindBody
         0     0% 99.19%     8.12GB 20.63%  benchmarks/echo.BenchmarkDynamicRoute
         0     0% 99.19%     6.61GB 16.79%  benchmarks/echo.BenchmarkMiddleware
         0     0% 99.19%     5.53GB 14.05%  benchmarks/echo.BenchmarkMiddleware.func1.1
         0     0% 99.19%     3.23GB  8.22%  benchmarks/echo.BenchmarkMiddleware.func2
         0     0% 99.19%    16.06GB 40.83%  benchmarks/echo.BenchmarkStaticRoute
         0     0% 99.19%    13.50GB 34.32%  benchmarks/echo.BenchmarkStaticRoute.func1
         0     0% 99.19%     8.52GB 21.67%  benchmarks/echo.BenchmarkTypedJSON
         0     0% 99.19%     2.01GB  5.10%  bytes.(*Buffer).Write
         0     0% 99.19%     2.16GB  5.48%  encoding/json.(*Decoder).Decode
         0     0% 99.19%     2.16GB  5.48%  encoding/json.(*Decoder).readValue
         0     0% 99.19%     5.09GB 12.94%  encoding/json.(*Encoder).Encode
         0     0% 99.19%     0.43GB  1.10%  encoding/json.(*encodeState).marshal
         0     0% 99.19%     0.43GB  1.10%  encoding/json.(*encodeState).reflectValue
         0     0% 99.19%     3.80GB  9.66%  github.com/labstack/echo/v4.(*DefaultBinder).Bind
         0     0% 99.19%    34.25GB 87.07%  github.com/labstack/echo/v4.(*Echo).ServeHTTP
         0     0% 99.19%    31.84GB 80.94%  github.com/labstack/echo/v4.(*Echo).add.func1
         0     0% 99.19%     6.02GB 15.30%  github.com/labstack/echo/v4.(*Response).Write
         0     0% 99.19%    13.18GB 33.50%  github.com/labstack/echo/v4.(*Response).WriteHeader
         0     0% 99.19%     3.80GB  9.66%  github.com/labstack/echo/v4.(*context).Bind
         0     0% 99.19%    16.39GB 41.66%  github.com/labstack/echo/v4.(*context).Blob
         0     0% 99.19%     9.19GB 23.36%  github.com/labstack/echo/v4.(*context).JSON
         0     0% 99.19%     0.47GB  1.21%  github.com/labstack/echo/v4.(*context).QueryParams (inline)
         0     0% 99.19%     8.71GB 22.15%  github.com/labstack/echo/v4.(*context).json
         0     0% 99.19%     9.48GB 24.09%  github.com/labstack/echo/v4.(*context).writeContentType
         0     0% 99.19%     3.47GB  8.83%  github.com/labstack/echo/v4.DefaultJSONSerializer.Deserialize
         0     0% 99.19%     5.09GB 12.94%  github.com/labstack/echo/v4.DefaultJSONSerializer.Serialize
         0     0% 99.19%    11.77GB 29.93%  net/http.Header.Set (inline)
         0     0% 99.19%     2.01GB  5.10%  net/http/httptest.(*ResponseRecorder).Write
         0     0% 99.19%    13.18GB 33.50%  net/http/httptest.(*ResponseRecorder).WriteHeader
         0     0% 99.19%     0.47GB  1.21%  net/url.(*URL).Query
         0     0% 99.19%    39.31GB 99.93%  testing.(*B).launch
         0     0% 99.19%    39.31GB 99.93%  testing.(*B).runN
